<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="2dc74382-9a37-49cb-b09b-b190419b7142" name="Administrator@WXWINTER 2010-03-03 16:57:27" runUser="WXWINTER\Administrator" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="dbe38011-5b33-4f3e-92d8-df443f73f504">
    <Description>These are default test settings for a local test run.</Description>
    <Deployment enabled="false" runDeploymentRoot="Administrator_WXWINTER 2010-03-03 16_57_27" />
    <Execution>
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
  </TestSettings>
  <Times creation="2010-03-03T16:57:27.4379746+08:00" queuing="2010-03-03T16:57:27.4899746+08:00" start="2010-03-03T16:57:27.6129746+08:00" finish="2010-03-03T16:57:27.8999746+08:00" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <UnitTest name="checkIDinTabATest" storage="e:\myconfig\documents\visual studio 2010\projects\wcfwfdatalayersample\testproject1\bin\debug\testproject1.dll" id="cbabe96b-de20-68da-66fe-34b8428ab706">
      <Execution id="1fc93a45-fd0c-4793-bc9d-4522e19bc024" />
      <TestMethod codeBase="e:/myconfig/documents/visual studio 2010/Projects/WcfWfDataLayerSample/TestProject1/bin/Debug/TestProject1.DLL" adapterTypeName="Microsoft.VisualStudio.TestTools.TestTypes.Unit.UnitTestAdapter, Microsoft.VisualStudio.QualityTools.Tips.UnitTest.Adapter, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" className="TestProject1.dbManageTest, TestProject1, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" name="checkIDinTabATest" />
    </UnitTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry testId="cbabe96b-de20-68da-66fe-34b8428ab706" executionId="1fc93a45-fd0c-4793-bc9d-4522e19bc024" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <UnitTestResult executionId="1fc93a45-fd0c-4793-bc9d-4522e19bc024" testId="cbabe96b-de20-68da-66fe-34b8428ab706" testName="checkIDinTabATest" computerName="WXWINTER" duration="00:00:00.0854607" startTime="2010-03-03T16:57:27.5069746+08:00" endTime="2010-03-03T16:57:27.8779746+08:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1fc93a45-fd0c-4793-bc9d-4522e19bc024">
      <Output>
        <ErrorInfo>
          <Message>Test method TestProject1.dbManageTest.checkIDinTabATest threw exception: 
System.InvalidOperationException: ExecuteScalar requires an open and available Connection. The connection's current state is closed.</Message>
          <StackTrace>    at System.Data.SqlClient.SqlConnection.GetOpenConnection(String method)
   at System.Data.SqlClient.SqlConnection.ValidateConnectionForExecute(String method, SqlCommand command)
   at System.Data.SqlClient.SqlCommand.ValidateCommand(String method, Boolean async)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method, DbAsyncResult result)
   at System.Data.SqlClient.SqlCommand.RunExecuteReader(CommandBehavior cmdBehavior, RunBehavior runBehavior, Boolean returnStream, String method)
   at System.Data.SqlClient.SqlCommand.ExecuteScalar()
   at WcfWfDataLayerSample.DB.dbManage.checkIDinTabA(String ID) in e:\myconfig\documents\visual studio 2010\Projects\WcfWfDataLayerSample\WcfWfDataLayerSample.DB\dbManage.cs:line 19
   at TestProject1.dbManageTest.checkIDinTabATest() in e:\myconfig\documents\visual studio 2010\Projects\WcfWfDataLayerSample\TestProject1\dbManageTest.cs:line 77
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
</TestRun>